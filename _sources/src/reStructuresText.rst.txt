================
reStructuresText
================

语法速览
========

一个reStructuredText文档是由正文或块级元素组成的，并且可以被结构化为多个章节
（Sections）。章节通过标题样式（下划线 underline 和可选的上划线 overline）来表示。
章节包含主体元素和/或子节。一些主体元素（body elements）包含更多的元素，例如包含
列表项的列表，而列表项又可能包含段落（paragraphs）和其他主体元素。其他元素，如段
落，包含文本和内联标记（inline markup）元素。

以下是一些主体元素的示例：

    - 段落（和内联标记）：
    - 五种类型的列表：
      
      1. 项目符号列表
         
         - 这是一个项目符号列表
         - 项目符号可以是“*”，“+”或者“-”
         
      2. 枚举列表
      
         1. 这是一个枚举列表
         2. 枚举器（Enumerators）可以是阿拉伯数字、字母或者罗马数字
         
      3. 定义列表
      
         什么
            定义列表将一个术语（term）与一个定义（definition）联系起来。
            
         如何
            术语是一个单行短语，定义是一个或多个段落或主体元素，相对于术语缩进。
            
      4. 字段列表
         
         :什么: 字段列表将字段名映射到字段主体，就像数据库记录一样。 它们通常是
                扩展语法的一部分。
         
         :如何: 字段标记（field marker）为冒号，字段名称和冒号。 
                
                字段主体可以包含一个或多个主体元素，相对于字段标记缩进。
                
      5. 选项列表（用于列出命令行选项）：
      
            -a            command-line option "a"
            -b file       options can have arguments
                       and long descriptions
            --long        options can be long also
            --input=file  long options can also have
                       arguments
            /V            DOS/VMS-style options too
         
         选项和描述之间至少要有两个空格。
      
    - 文本块（Literial blocks）：
      
      在前一个段落的后面添加“::”或者单独在一个新段落中添加“::”将后续缩进的段落解
      析为文本块，以下为示例： ::
      
        文本块内的内容将不会被做任何的解析处理，
        空格和换行等将被保留。
      
    - 引述块（Block quotes）：
      
      引述块由缩进的主体元素组成，以下为示例 ：
      
        宇宙中唯有两件事物是无限的：宇宙的大小与人的愚蠢。我不能确定的是宇宙的大
        小。
        
        -- 爱因斯坦
        
    - Doctest blocks:
      
      >>> print 'Python-specific usage examples; begun with ">>>"'
      Python-specific usage examples; begun with ">>>"
      >>> print '(cut and pasted from interactive Python sessions)'
      (cut and pasted from interactive Python sessions)

      
    - 表格的两种语法：
    
      1. 网格表格（Grid tables）-- 完整的，但复杂和冗长
         
         +------------------------+------------+----------+
         | 标题行, 第一列         | 标题二     | 标题三   |
         +========================+============+==========+
         | 数据行一, 第一列       | 第二列     | 第三列   |
         +------------------------+------------+----------+
         | 数据行二               | 跨列单元格            |
         +------------------------+-----------------------+
      
      2. 简单表格（Simple tables）-- 容易且紧凑，但有局限
      
         ====================  ==========  ==========
         标题行, 第一列        标题二      标题三
         ====================  ==========  ==========
         数据行一, 第一列      第二列      第三列
         数据行二              跨列单元格
         ====================  ======================
      
    - 显示标记块（Explicit markup blocks）-- 全部以一个显示的块标记,两个句点和一
      个空格开头开始：
      
      - 脚注（Footnotes）：
      
        .. [1] 脚注包含身体元素，始终以至少3个空格缩进。 
        
      - 引文（Citations）：
      
        .. [CIT2002] 就像脚注一样，只不过标签是文字的。
        
      - 超链接目标（Hyperlink targets）：
        
        .. _Python: http://www.python.org

        .. _example:

        The "_example" target above points to this paragraph.
        
      - 指令（Directives）：
      
        .. image:: mylogo.png
      
      - 替代定义（Substitution definitions）：
      
        .. |symbol here| image:: symbol.png
      
      - 注释（Comments）：
      
        注释以两个点和一个空格开始。除了脚注/引文、超链接目标、指令或替换定义的
        语法外，任何内容都可以跟在后面。
    
语法详解
========

下面的描述列出了与语法结构相对应的 "doctree元素"（文档树元素名称；XML DTD通用标
识符）。有关元素层次结构的详细信息，请参阅 `The Docutils Document Tree <https://
docutils.sourceforge.io/docs/ref/doctree.html>`_ 和 `Docutils Generic DTD <https
://docutils.sourceforge.io/docs/ref/docutils.dtd>`_ XML文档类型定义。 

空白（Whitespace）
------------------

建议使用空格进行缩进，但也可以使用制表符。制表符将转换为空格。制表位位于每第8列
（处理系统可以使该值可配置）。

其他空白字符（换页符[chr（12）]和垂直制表符[chr（11）]）在处理之前将被转换为单个
空格。 

空行（Blank Lines）
-------------------

空行用于分隔段落和其他元素。多个连续的空行相当于一个空行，但文本块内（保留所有空
白）的空行除外。当标记（markup）使元素分离不明确时，结合缩进，可以省略空行。文档
的第一行被视为在其前面有一个空行，文档的最后一行被视为在其后面有一个空行。

缩进（Indentation）
-------------------

缩进是用来表示--而且只在表示--引述块、定义（在定义列表中）和在以下局部嵌套内容时才有意
义：

- 列表项内容（列表项的多行内容，以及列表项中的多个主体元素，包括嵌套列表）
- 文本块的内容，以及
- 显式标记块的内容（指令、脚注...）。

任何小于当前级别缩进的文本将结束当前级别的缩进。

由于所有的缩进都很重要，所以缩进的程度必须一致。例如，缩进是表明引述块的唯一标记：::

    这是一个顶层段落。

         本段属于第一级引述块。

             本段属于第二级引述块。

    另一个顶级段落。

             本段属于第二级引述块。

         本段属于第一级引述块。上面的第二级引述块在此第一级引述块内。
         
当一个段落或其他结构由多行文字组成时，这些行必须左对齐。

几个构造以标记开头，并且构造的主体必须相对于标记缩进。对于使用简单标记（项目符号
列表，枚举列表）的构造，正文的缩进级别由第一行文本的位置确定。例如： ::

    - 这是项目符号列表项的段落的第一行。
      所有行必须相对于第一行对齐。 
      
        这段缩进的文本被解析为引述块。
        
      属于第一个列表项的另一段。
      
     由于缩进不够，本段不属于列表项（它是列表后面的一个引述块）。
     
显式标记块、字段列表和选项列表的主体以与标记相同或更少的缩进结束于第一行。
例如，字段列表可能具有很长的标记（包含字段名称）： ::

    :Hello: This field has a short field name, so aligning the field
            body with the first line is feasible.

    :Number-of-African-swallows-required-to-carry-a-coconut: It would
        be very difficult to align the field body with the left edge
        of the first line.  It may even be preferable not to begin the
        body on the same line as the marker.
        
转义机制（Escaping Mechanism）
------------------------------

段落（和内联标记）
------------------

列表的五种类型
---------------
 
    1.  项目列表：
    
        以“*”，“ +”，“-”，“•”，“‣”或“⁃”开头，后跟空格的文本块是项目符号列表项（也
        称为“无序”列表项）。列表项目主体必须相对于项目符号左对齐并缩进；项目符号
        紧随其后的文本确定缩进。 例如： ::
        
            - 这是第一个项目符号列表项。 第一个列表项上方的空白行是必需的；
              列表项之间的空白行（例如本段下方）是可选的。 

            - 这是列表中第二项的第一段。

              这是列表中第二项的第二段。
              本段上方的空白行是必需的。
              本段的左边缘与上面的段对齐，并且两者均相对于项目符号缩进。

              - 这是一个子列表。 项目符号与上方文本块的左边缘对齐。
                子列表是一个新列表，因此在其上方和下方都需要一个空白行。

            - 这是主列表的第三项。

            本段不属于列表的一部分。
 
    2.  枚举列表：
        
        枚举列表（也称为“有序”列表）类似于项目符号列表，但使用枚举器代替项目符号。
        枚举器由枚举序列成员和格式组成，后跟空白。可以识别以下枚举序列： 

            - 阿拉伯数字：1，2，3，...（无上限）。
            - 大写字母字符：A，B，C，...，Z。
            - 小写字母字符：a，b，c，...，z。
            - 大写罗马数字：I，II，III，IV，...，MMMMCMXCIX（4999）。
            - 小写罗马数字：i，ii，iii，iv，...，mmmmcmxcix（4999）。
        
        另外，自动枚举器“＃”可用于自动枚举列表。 自动枚举列表可以从显式枚举开始，
        该枚举设置顺序。 完全自动枚举的列表使用阿拉伯数字并以1开头。（自动枚举的
        列表是Docutils 0.3.8中的新增功能。） 
        
        可以识别以下格式类型：
        
            - 后缀为句点：“1.”，“A.”，“a.”，“I.”，“i.”。
            - 用括号括起来：“(1)”，“(A)”，“(a)”，“(I)”，“(i)”。
            - 后缀为右括号：“1)”，“A)”，“a)”，“I)”，“i)”。
        
        解析枚举列表时，只要出现以下情况，就会启动一个新列表： 
        
            - 遇到一个枚举器，其格式和序列类型与当前列表不同（例如，“ 1.”，“(a)”
              产生两个单独的列表）。
            - 枚举器不按顺序排列（例如，“1.”，“3.”产生两个单独的列表）。
            
        建议第一个列表项的枚举数为ordinal-1（“1”，“A”，“a”，“I”或“i”）。尽管可以
        识别其他起始值，但是输出格式可能不支持它们。对于以非ordinal-1枚举器开头的
        任何列表，将生成1级[info]系统消息。

        使用罗马数字的列表必须以“I”/“i”或多字符值（例如“II”或“XV”）开头。任何其他
        单字符罗马数字（“V”，“X”，“L”，“C”，“D”，“M”）将被解释为字母，而不是罗马
        数字。同样，使用字母的列表也不能以“I”/“i”开头，因为它们被识别为罗马数字1。
        
        检查每个枚举列表项的第二行的有效性。这是为了防止当普通段落恰好以与枚举器
        相同的文本开头时，将普通段落错误地解释为列表项。例如，此文本被解析为普通
        段落： ::
        
            A. 爱因斯坦是一个
            非常聪明的家伙。
            
        但是，如果该段落仅包含一行，则无法避免歧义。此文本被解析为枚举列表项：::
        
            A. 爱因斯坦是一个非常聪明的家伙。
            
        如果单行段落以与枚举器相同的文本开头（“A.”，“1.”，“(b)”，“I)”等），则必须
        对第一个字符进行转义，以便将行解析为普通段落： ::
        
            \A. 爱因斯坦是一个非常聪明的家伙。
            
        嵌套枚举列表的示例： ::
        
            1. Item 1 initial text.

               a) Item 1a.
               b) Item 1b.

            2. a) Item 2a.
               b) Item 2b.

    3.  定义列表：
 
    4.  字段列表：
 
    5.  选项列表：


字面文字块
----------

块引用
------

表格的两种语法
--------------

显示标记块
----------

